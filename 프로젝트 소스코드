import random
import numpy as np
from multiprocessing import Pool
from matplotlib import pyplot as plt

n = int(input("반복 변수"))
count = 0

for i in range(n):
    x = random.uniform(0,1.0)
    y = random.uniform(0,1.0)
    if (x ** 2 + y ** 2) <= 1:
        count = count + 1

if __name__ == '__main__':
    x = np.random.random([n, 2])     ## 무작위 시행 횟수 정의
    distance = np.sum(x ** 2.0, axis=1)
    in_out = distance <= 1.0
    pi = np.sum(in_out) * 4/n       ## Pi 값은 천제 시행에서 원 안에 있는 점의 갯수로 정해짐
    color = list(map(lambda x: 'red' if x else 'blue', in_out))     ## 원의 안, 밖에 따른 색상 설정

    plt.figure(figsize=(10, 10))        ## 그림 사이즈
    plt.scatter(x[:,0], x[:,1], color = color, s=5, label = 'Result : {}'.format(np.round(pi, 4)))

    cx = np.cos(np.linspace(0, np.pi/2, 10000))
    cy = np.sin(np.linspace(0, np.pi/2, 10000))
    plt.plot(cx, cy, color = 'black', lw = 2)       ## 원의 경계를 그려주는 부분
    plt.legend(loc = 'lower right')

    plt.xlim(0, 1)
    plt.ylim(0, 1)
    plt.show()

print("파이의 값은? ", 4*count/n)